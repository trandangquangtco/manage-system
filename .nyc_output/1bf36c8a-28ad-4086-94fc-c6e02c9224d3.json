{"F:\\quang\\vmotest\\fresher-project\\models\\category\\projectTypeModel.js":{"path":"F:\\quang\\vmotest\\fresher-project\\models\\category\\projectTypeModel.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"3":{"start":{"line":10,"column":16},"end":{"line":10,"column":59}},"4":{"start":{"line":12,"column":13},"end":{"line":12,"column":40}},"5":{"start":{"line":13,"column":16},"end":{"line":28,"column":2}},"6":{"start":{"line":30,"column":18},"end":{"line":30,"column":70}},"7":{"start":{"line":33,"column":0},"end":{"line":33,"column":34}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["projectTypeModel.js"],"names":["Schema","mongoose","prjSchema","projectType","type","String","unique","required","describe","important","Number","active","Boolean","collection","timestamps","model"],"mappings":";;;;;;;;;AAAA;;IAEQA,M,GAAWC,oB,CAAXD,M;AAER,IAAME,SAAS,GAAG,IAAIF,MAAJ,CAAW;AAC3BG,EAAAA,WAAW,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,MAAM,EAAE,IAAxB;AAA8BC,IAAAA,QAAQ,EAAE;AAAxC,GADc;AAE3BC,EAAAA,QAAQ,EAAEH,MAFiB;AAG3BI,EAAAA,SAAS,EAAE;AAAEL,IAAAA,IAAI,EAAEM,MAAR;AAAgB,eAAS;AAAzB,GAHgB;AAI3BC,EAAAA,MAAM,EAAEC;AAJmB,CAAX,EAKf;AAAEC,EAAAA,UAAU,EAAE,aAAd;AAA6BC,EAAAA,UAAU,EAAE;AAAzC,CALe,CAAlB;;AAOA,IAAMX,WAAW,GAAGF,qBAASc,KAAT,CAAe,aAAf,EAA8Bb,SAA9B,CAApB,C,CAEA","sourceRoot":"F:\\quang\\vmotest\\fresher-project\\models\\category\\","sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst { Schema } = mongoose;\r\n\r\nconst prjSchema = new Schema({\r\n  projectType: { type: String, unique: true, required: true },\r\n  describe: String,\r\n  important: { type: Number, default: 1 },\r\n  active: Boolean,\r\n}, { collection: 'projectType', timestamps: true });\r\n\r\nconst projectType = mongoose.model('projectType', prjSchema);\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport { projectType };\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8cc920914899ba0678b7363858c91d2578967b6b","contentHash":"88b231f1940cf11f5cc8d86020af2eab2ed6b457d1cf5ca0f621f6427aae2b4a"},"F:\\quang\\vmotest\\fresher-project\\services\\category\\projectTypeService.js":{"path":"F:\\quang\\vmotest\\fresher-project\\services\\category\\projectTypeService.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":137}},"3":{"start":{"line":10,"column":19},"end":{"line":10,"column":80}},"4":{"start":{"line":12,"column":25},"end":{"line":12,"column":99}},"5":{"start":{"line":14,"column":24},"end":{"line":14,"column":73}},"6":{"start":{"line":16,"column":16},"end":{"line":16,"column":49}},"7":{"start":{"line":18,"column":34},"end":{"line":49,"column":3}},"8":{"start":{"line":19,"column":13},"end":{"line":44,"column":5}},"9":{"start":{"line":21,"column":4},"end":{"line":43,"column":32}},"10":{"start":{"line":22,"column":6},"end":{"line":42,"column":7}},"11":{"start":{"line":23,"column":8},"end":{"line":41,"column":9}},"12":{"start":{"line":25,"column":12},"end":{"line":25,"column":30}},"13":{"start":{"line":26,"column":12},"end":{"line":26,"column":30}},"14":{"start":{"line":27,"column":12},"end":{"line":27,"column":62}},"15":{"start":{"line":30,"column":12},"end":{"line":30,"column":35}},"16":{"start":{"line":31,"column":12},"end":{"line":31,"column":95}},"17":{"start":{"line":34,"column":12},"end":{"line":34,"column":30}},"18":{"start":{"line":35,"column":12},"end":{"line":35,"column":47}},"19":{"start":{"line":36,"column":12},"end":{"line":36,"column":122}},"20":{"start":{"line":40,"column":12},"end":{"line":40,"column":35}},"21":{"start":{"line":46,"column":2},"end":{"line":48,"column":4}},"22":{"start":{"line":47,"column":4},"end":{"line":47,"column":39}},"23":{"start":{"line":51,"column":0},"end":{"line":51,"column":40}},"24":{"start":{"line":53,"column":22},"end":{"line":55,"column":1}},"25":{"start":{"line":54,"column":2},"end":{"line":54,"column":51}},"26":{"start":{"line":58,"column":0},"end":{"line":58,"column":42}},"27":{"start":{"line":60,"column":25},"end":{"line":62,"column":1}},"28":{"start":{"line":61,"column":2},"end":{"line":61,"column":51}},"29":{"start":{"line":64,"column":0},"end":{"line":64,"column":48}},"30":{"start":{"line":66,"column":21},"end":{"line":71,"column":1}},"31":{"start":{"line":67,"column":2},"end":{"line":70,"column":5}},"32":{"start":{"line":73,"column":0},"end":{"line":73,"column":40}},"33":{"start":{"line":75,"column":21},"end":{"line":77,"column":1}},"34":{"start":{"line":76,"column":2},"end":{"line":76,"column":53}},"35":{"start":{"line":79,"column":0},"end":{"line":79,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":18,"column":34},"end":{"line":18,"column":35}},"loc":{"start":{"line":18,"column":46},"end":{"line":49,"column":1}},"line":18},"1":{"name":"_callee","decl":{"start":{"line":19,"column":100},"end":{"line":19,"column":107}},"loc":{"start":{"line":19,"column":114},"end":{"line":44,"column":3}},"line":19},"2":{"name":"_callee$","decl":{"start":{"line":21,"column":49},"end":{"line":21,"column":57}},"loc":{"start":{"line":21,"column":68},"end":{"line":43,"column":5}},"line":21},"3":{"name":"addProjectType","decl":{"start":{"line":46,"column":18},"end":{"line":46,"column":32}},"loc":{"start":{"line":46,"column":37},"end":{"line":48,"column":3}},"line":46},"4":{"name":"findProjectType","decl":{"start":{"line":53,"column":31},"end":{"line":53,"column":46}},"loc":{"start":{"line":53,"column":67},"end":{"line":55,"column":1}},"line":53},"5":{"name":"findOneProjectType","decl":{"start":{"line":60,"column":34},"end":{"line":60,"column":52}},"loc":{"start":{"line":60,"column":57},"end":{"line":62,"column":1}},"line":60},"6":{"name":"putProjectType","decl":{"start":{"line":66,"column":30},"end":{"line":66,"column":44}},"loc":{"start":{"line":66,"column":55},"end":{"line":71,"column":1}},"line":66},"7":{"name":"delProjectType","decl":{"start":{"line":75,"column":30},"end":{"line":75,"column":44}},"loc":{"start":{"line":75,"column":49},"end":{"line":77,"column":1}},"line":75}},"branchMap":{"0":{"loc":{"start":{"line":23,"column":8},"end":{"line":41,"column":9}},"type":"switch","locations":[{"start":{"line":24,"column":10},"end":{"line":27,"column":62}},{"start":{"line":29,"column":10},"end":{"line":31,"column":95}},{"start":{"line":33,"column":10},"end":{"line":36,"column":122}},{"start":{"line":38,"column":10},"end":{"line":38,"column":18}},{"start":{"line":39,"column":10},"end":{"line":40,"column":35}}],"line":23}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":3,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":0,"29":1,"30":1,"31":0,"32":1,"33":1,"34":0,"35":1},"f":{"0":1,"1":1,"2":3,"3":1,"4":1,"5":0,"6":0,"7":0},"b":{"0":[1,1,0,0,1]},"inputSourceMap":{"version":3,"sources":["projectTypeService.js"],"names":["addProjectType","body","projectType","create","message","findProjectType","query","limit","page","find","findOneProjectType","id","findOne","putProjectType","findOneAndUpdate","runValidators","delProjectType","deleteOne"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,cAAc;AAAA,2FAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEEC,8BAAYC,MAAZ,CAAmBF,IAAnB,CAFF;;AAAA;AAEbE,YAAAA,MAFa;AAAA,6CAGZ,uBAAQ,MAAR,EAAgB,QAAhB,EAA0BA,MAA1B,CAHY;;AAAA;AAAA;AAAA;AAAA,6CAKZ,oBAAK,YAAMC,OAAX,EAAoB,aAApB,EAAmC,aAAnC,EAAkD,GAAlD,CALY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdJ,cAAc;AAAA;AAAA;AAAA,GAApB;;;;AASA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf;AAAA,SAAwBN,8BAAYO,IAAZ,CAAiBH,KAAjB,CAAxB;AAAA,CAAxB,C,CACE;;;;;AAEF,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,EAAD;AAAA,SAAQT,8BAAYU,OAAZ,CAAoBD,EAApB,CAAR;AAAA,CAA3B;;;;AAEA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACF,EAAD,EAAKV,IAAL;AAAA,SAAcC,8BAAYY,gBAAZ,CAA6BH,EAA7B,EAAiCV,IAAjC,EACnC;AAAE,WAAK,IAAP;AAAac,IAAAA,aAAa,EAAE;AAA5B,GADmC,CAAd;AAAA,CAAvB;;;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACL,EAAD;AAAA,SAAQT,8BAAYe,SAAZ,CAAsBN,EAAtB,CAAR;AAAA,CAAvB","sourceRoot":"F:\\quang\\vmotest\\fresher-project\\services\\category\\","sourcesContent":["import { projectType } from '../../models/category/projectTypeModel';\nimport { fail, success } from '../../helpers/response';\n\nconst addProjectType = async (body) => {\n  try {\n    const create = await projectType.create(body);\n    return success('post', 'create', create);\n  } catch (error) {\n    return fail(error.message, 'Bad Request', 'BAD_REQUEST', 400);\n  }\n};\n\nconst findProjectType = (query, limit, page) => projectType.find(query)\n  // .limit(limit).skip(limit * (page - 1));\n\nconst findOneProjectType = (id) => projectType.findOne(id);\n\nconst putProjectType = (id, body) => projectType.findOneAndUpdate(id, body,\n  { new: true, runValidators: true });\n\nconst delProjectType = (id) => projectType.deleteOne(id);\n\nexport {\n  addProjectType, findOneProjectType, findProjectType, putProjectType, delProjectType,\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ad13e1d31b4213a42baf85d3958bf54d2f81f771","contentHash":"c14f6bfaeadcff5669aa5385134df8c8f124f20764edf376ce3a0e5ec02eb23c"},"F:\\quang\\vmotest\\fresher-project\\helpers\\response.js":{"path":"F:\\quang\\vmotest\\fresher-project\\helpers\\response.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":79}},"2":{"start":{"line":8,"column":14},"end":{"line":16,"column":1}},"3":{"start":{"line":9,"column":22},"end":{"line":9,"column":73}},"4":{"start":{"line":10,"column":2},"end":{"line":15,"column":4}},"5":{"start":{"line":18,"column":0},"end":{"line":18,"column":26}},"6":{"start":{"line":20,"column":19},"end":{"line":30,"column":1}},"7":{"start":{"line":21,"column":15},"end":{"line":21,"column":85}},"8":{"start":{"line":22,"column":2},"end":{"line":29,"column":4}},"9":{"start":{"line":32,"column":0},"end":{"line":32,"column":36}},"10":{"start":{"line":34,"column":12},"end":{"line":44,"column":1}},"11":{"start":{"line":35,"column":2},"end":{"line":43,"column":4}},"12":{"start":{"line":46,"column":0},"end":{"line":46,"column":22}},"13":{"start":{"line":48,"column":11},"end":{"line":55,"column":1}},"14":{"start":{"line":49,"column":2},"end":{"line":54,"column":4}},"15":{"start":{"line":57,"column":0},"end":{"line":57,"column":20}}},"fnMap":{"0":{"name":"success","decl":{"start":{"line":8,"column":23},"end":{"line":8,"column":30}},"loc":{"start":{"line":8,"column":52},"end":{"line":16,"column":1}},"line":8},"1":{"name":"baseResponse","decl":{"start":{"line":20,"column":28},"end":{"line":20,"column":40}},"loc":{"start":{"line":20,"column":73},"end":{"line":30,"column":1}},"line":20},"2":{"name":"login","decl":{"start":{"line":34,"column":21},"end":{"line":34,"column":26}},"loc":{"start":{"line":34,"column":43},"end":{"line":44,"column":1}},"line":34},"3":{"name":"fail","decl":{"start":{"line":48,"column":20},"end":{"line":48,"column":24}},"loc":{"start":{"line":48,"column":58},"end":{"line":55,"column":1}},"line":48}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":15},"end":{"line":21,"column":85}},"type":"cond-expr","locations":[{"start":{"line":21,"column":68},"end":{"line":21,"column":80}},{"start":{"line":21,"column":83},"end":{"line":21,"column":85}}],"line":21},"1":{"loc":{"start":{"line":21,"column":15},"end":{"line":21,"column":65}},"type":"binary-expr","locations":[{"start":{"line":21,"column":15},"end":{"line":21,"column":35}},{"start":{"line":21,"column":39},"end":{"line":21,"column":65}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":1,"11":0,"12":1,"13":1,"14":0,"15":1},"f":{"0":1,"1":0,"2":0,"3":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"sources":["response.js"],"names":["success","method","title","data","createSuccess","message","messageCode","split","join","toUpperCase","status","baseResponse","successStatus","msgKey","login","token","refresh","refreshToken","fail","error","msgCode"],"mappings":";;;;;;;AAAA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAASC,KAAT,EAAgBC,IAAhB,EAAyB;AACvC,MAAMC,aAAa,aAAMH,MAAN,cAAgBC,KAAhB,gBAAnB;AACA,SAAQ;AACNG,IAAAA,OAAO,EAAED,aADH;AAENE,IAAAA,WAAW,EAAEF,aAAa,CAACG,KAAd,CAAoB,GAApB,EAAyBC,IAAzB,CAA8B,GAA9B,EAAmCC,WAAnC,EAFP;AAGNN,IAAAA,IAAI,EAAJA,IAHM;AAINO,IAAAA,MAAM,EAAE;AAJF,GAAR;AAMD,CARD;;;;AASA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACD,MAAD,EAASE,aAAT,EAAwBP,OAAxB;AAAA,MAAiCQ,MAAjC,uEAA0C,EAA1C;AAAA,SAAkD;AACrEH,IAAAA,MAAM,EAANA,MADqE;AAErEP,IAAAA,IAAI,EAAE;AACJH,MAAAA,OAAO,EAAEY,aADL;AAEJP,MAAAA,OAAO,EAAPA,OAFI;AAGJQ,MAAAA,MAAM,EAANA;AAHI;AAF+D,GAAlD;AAAA,CAArB;;;;AASA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAQC,OAAR;AAAA,SAAqB;AACjCX,IAAAA,OAAO,EAAE,eADwB;AAEjCC,IAAAA,WAAW,EAAE,eAFoB;AAGjCH,IAAAA,IAAI,EAAE;AACJY,MAAAA,KAAK,EAALA,KADI;AAEJE,MAAAA,YAAY,EAAED;AAFV,KAH2B;AAOjCN,IAAAA,MAAM,EAAE;AAPyB,GAArB;AAAA,CAAd;;;;AAUA,IAAMQ,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAQd,OAAR,EAAiBe,OAAjB,EAA0BV,MAA1B;AAAA,SAAsC;AACjDA,IAAAA,MAAM,EAANA,MADiD;AAEjDL,IAAAA,OAAO,EAAPA,OAFiD;AAGjDC,IAAAA,WAAW,EAAEc,OAHoC;AAIjDD,IAAAA,KAAK,EAALA;AAJiD,GAAtC;AAAA,CAAb","sourceRoot":"F:\\quang\\vmotest\\fresher-project\\helpers\\","sourcesContent":["const success = (method, title, data) => {\n  const createSuccess = `${method} ${title} successful`;\n  return ({\n    message: createSuccess,\n    messageCode: createSuccess.split(' ').join('_').toUpperCase(),\n    data,\n    status: 200,\n  });\n};\nconst baseResponse = (status, successStatus, message, msgKey = '') => ({\n  status,\n  data: {\n    success: successStatus,\n    message,\n    msgKey,\n  },\n});\n\nconst login = (token, refresh) => ({\n  message: 'login success',\n  messageCode: 'LOGIN_SUCCESS',\n  data: {\n    token,\n    refreshToken: refresh,\n  },\n  status: 200,\n});\n\nconst fail = (error, message, msgCode, status) => ({\n  status,\n  message,\n  messageCode: msgCode,\n  error,\n});\n\nexport {\n  login, success, fail, baseResponse,\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ddb03b0762944b08d9f1d5ac601f315d8cfd85af","contentHash":"f8f5712168302d39c4b1ebb4c99fe927022392497923084407ad4fcdc6e7901b"}}